How to Create Card Flip Effect  -   https://www.youtube.com/watch?v=QGVXmoZWZuw

    <div class="recipe-header">
        <h3>{{ recipe_title }}</h3>
        <p>{{ recipe_desc }}</p>
    </div>
    

    <div class="ingredients">
        <p>Ingredients:</p>
        {% for item in ingredients_list %}
            {% set cleaned_item = item|safe %}
            {% if cleaned_item|length < 1 %}
                {{ pass }}
            {% else: %}
                <p>{{ "- " + cleaned_item }}</p>
            {% endif %}
        {% endfor %}
    </div>
    <br>
    <div class="instructions">
        <p>Instructions:</p>
            {% for step in instructions %}
            {% set cleaned_step = step|safe %}
                {% if cleaned_step|length < 1 %}
                    {{ pass }}
                {% else: %}
                    <p>{{ cleaned_step }}</p>
                {% endif %}
            {% endfor %}
    </div>

    <input type="hidden" name="recipe_title" value="{{ recipe_title }}">
    <input type="hidden" name="recipe_desc" value="{{ recipe_desc }}">
    <input type="hidden" name="instructions" value="{{ instructions }}">
    <input type="hidden" name="ingredients_list" value="{{ ingredients_list }}">



this code goes in display recipe but at the end. its supposed to allow for a new image to be created.

        <!-- <script>
        function triggerRegen() {
            const recipeTitleInput = document.querySelector('input[name="recipe_title"]');
            const recipeDescInput = document.querySelector('input[name="recipe_desc"]');
            const instructionsInput = document.querySelector('input[name="instructions"]');
            const ingredientsListInput = document.querySelector('input[name="ingredients_list"]');
            const recipeTitleValue = recipeTitleInput.value;
            const recipeDescValue = recipeDescInput.value;
            const instructionsValue = instructionsInput.value;
            const ingredientsListValue = ingredientsListInput.value;
            fetch('/regen_images', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    title: '{{ recipe_title }}',
                    description: '{{ recipe_desc }}',
                    instructions: '{{ instructions | tojson }}',
                    ingredients_list: '{{ ingredients_list | tojson }}'
                })
            })
                .then(response => {
                    if (response.ok) {
                        console.log('Image regeneration started.');
                        return response.json();
                    } else {
                        console.log('Error triggering image regeneration.');
                        throw new Error('Error triggering image regeneration.');
                    }
                })
                .then(data => {
                    const imageContainer = document.getElementById('imageContainer');
                    const pElement = document.createElement('p');
                    pElement.textContent = 'Please select the image you would like to use for your recipe:';
                    imageContainer.innerHTML = '';
                    imageContainer.appendChild(pElement);
                    data.images.slice(0, 2).forEach((imageUrl, index) => {
                        const imageGroup = document.createElement('div');
                        imageGroup.className = 'image-group';
                        
                        const radioElement = document.createElement('input');
                        radioElement.type = 'radio';
                        radioElement.id = 'image_' + index;
                        radioElement.name = 'recipe_image';
                        radioElement.value = imageUrl;
                        
                        const labelElement = document.createElement('label');
                        labelElement.htmlFor = 'image_' + index;
                        
                        const imgElement = document.createElement('img');
                        imgElement.src = imageUrl;
                        imgElement.alt = 'Recipe Image';
                        
                        labelElement.appendChild(imgElement);
                        imageGroup.appendChild(radioElement);
                        imageGroup.appendChild(labelElement);
                        imageContainer.appendChild(imageGroup);
                    });
                    
                    const regenButton = document.createElement('button');
                    regenButton.type = 'button';
                    regenButton.id = 'regenButton';
                    regenButton.textContent = 'Re-Generate Images';
                    regenButton.onclick = triggerRegen;
                    imageContainer.appendChild(regenButton);
                    
                    const brElement = document.createElement('br');
                    imageContainer.appendChild(brElement);
                    
                    const recipeForm = document.getElementById('recipeForm');
                    const submitButton = document.createElement('button');
                    submitButton.type = 'submit';
                    submitButton.id = 'submitButton';
                    submitButton.textContent = 'Save Recipe';
                    recipeForm.appendChild(submitButton);
                    
                    recipeTitleInput.value = recipeTitleValue;
                    recipeDescInput.value = recipeDescValue;
                    instructionsInput.value = instructionsValue;
                    ingredientsListInput.value = ingredientsListValue;
                })
                .catch(error => console.error(error));
        }
    </script>
     -->

     {% set ingredients_list = recipe.ingredients | string_to_list %}

     {{ instructions | safe }}
    {% set instructions = recipe.instructions | custom_split %}

    {% set ingredients_list = recipe.ingredients | string_to_list %}